.data
6
0
75
0x100
0x140
0x200
5, 4
6, 4
4, 5
5, 5
6, 5
7, 5
5, 6
6, 6
4, 7
5, 7
6, 7
7, 7
-1,-1 ;;end

.text
/*
	Spisak registara:
	R0 - tmp register
	R1 - tmp chunk x
	R2 - tmp chunk y
	R3 - color
	R4 - p_top
	R5 - p_pb_dec
	R6 - p_frame_sync
	R7 - p_rgb_matrix
*/

begin:
	;; Setup pointers and color.
	inc R0, R0                  ;; addr = 1
	inc R0, R0                  ;; addr = 2
	inc R0, R0                  ;; addr = 3
	ld R7, R0                   ;; R7 <- p_rgb_matrix 0x100
	inc R0, R0                  ;; addr = 4
	ld R6, R0                   ;; R6 <- p_frame_sync 0x140
	inc R0, R0                  ;; addr = 5
	ld R5, R0                   ;; R5 <- p_pb_dec 0x200
	inc R3, R3
	
frame_sync_rising_edge:	
frame_sync_wait_0:
	ld R0, R6                   ;; R0 <- p_frame_sync
	jmpnz frame_sync_wait_0
frame_sync_wait_1:
	ld R0, R6                   ;; R0 <- p_frame_sync
	jmpz frame_sync_wait_1
draw_begin:
	sub R0, R0, R0
	ld R4, R0
	shl R3, R3
	shl R3, R3

	ld R1, R4
	inc R4, R4
	ld R2, R4
	inc R4, R4
 	shl R2, R2
	shl R2, R2
	shl R2, R2
	add R2, R1, R2
	add R2, R7, R2
	st R3, R2

	ld R1, R4
	inc R4, R4
	ld R2, R4
	inc R4, R4
 	shl R2, R2
	shl R2, R2
	shl R2, R2
	add R2, R1, R2
	add R2, R7, R2
	st R3, R2

	ld R1, R4
	inc R4, R4
	ld R2, R4
	inc R4, R4
 	shl R2, R2
	shl R2, R2
	shl R2, R2
	add R2, R1, R2
	add R2, R7, R2
	st R3, R2

	ld R1, R4
	inc R4, R4
	ld R2, R4
	inc R4, R4
 	shl R2, R2
	shl R2, R2
	shl R2, R2
	add R2, R1, R2
	add R2, R7, R2
	st R3, R2

	ld R1, R4
	inc R4, R4
	ld R2, R4
	inc R4, R4
 	shl R2, R2
	shl R2, R2
	shl R2, R2
	add R2, R1, R2
	add R2, R7, R2
	st R3, R2

	ld R1, R4
	inc R4, R4
	ld R2, R4
	inc R4, R4
 	shl R2, R2
	shl R2, R2
	shl R2, R2
	add R2, R1, R2
	add R2, R7, R2
	st R3, R2

	ld R1, R4
	inc R4, R4
	ld R2, R4
	inc R4, R4
 	shl R2, R2
	shl R2, R2
	shl R2, R2
	add R2, R1, R2
	add R2, R7, R2
	st R3, R2

	ld R1, R4
	inc R4, R4
	ld R2, R4
	inc R4, R4
 	shl R2, R2
	shl R2, R2
	shl R2, R2
	add R2, R1, R2
	add R2, R7, R2
	st R3, R2

	ld R1, R4
	inc R4, R4
	ld R2, R4
	inc R4, R4
 	shl R2, R2
	shl R2, R2
	shl R2, R2
	add R2, R1, R2
	add R2, R7, R2
	st R3, R2

	ld R1, R4
	inc R4, R4
	ld R2, R4
	inc R4, R4
 	shl R2, R2
	shl R2, R2
	shl R2, R2
	add R2, R1, R2
	add R2, R7, R2
	st R3, R2

	ld R1, R4
	inc R4, R4
	ld R2, R4
	inc R4, R4
 	shl R2, R2
	shl R2, R2
	shl R2, R2
	add R2, R1, R2
	add R2, R7, R2
	st R3, R2

	ld R1, R4
	inc R4, R4
	ld R2, R4
	inc R4, R4
 	shl R2, R2
	shl R2, R2
	shl R2, R2
	add R2, R1, R2
	add R2, R7, R2
	st R3, R2
move_car:
	ld R1, R4
	ld R0, R5
	add R1, R1, R0
	st R1, R4
	inc R4, R4
	inc R5, R5
	ld R2, R4
	ld R0, R5
	dec R5, R5
	add R2, R2, R0
	st R2, R4
	sub R6, R6, R6
	sub R4, R4, R4
	ld R4, R4
	inc R4, R4
	jmp frame_sync_rising_edge



